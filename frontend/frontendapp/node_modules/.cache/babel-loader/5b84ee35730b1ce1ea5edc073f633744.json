{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Django\\\\DjRe\\\\frontend\\\\frontendapp\\\\src\\\\components\\\\login.js\";\nimport { render } from '@testing-library/react';\nimport React, { Component } from 'react';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      credentials: {\n        username: '',\n        password: ''\n      }\n    };\n\n    this.login = event => {\n      console.log(this.state.credentials);\n      fetch('http://127.0.0.1:8000/auth/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.credentials)\n      }).then(data => data.json()).then(data => {\n        console.log(data.token);\n      }).catch(error => console.error(error));\n    };\n\n    this.register = event => {\n      fetch('http://127.0.0.1:8000/api/users/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.credentials)\n      }).then(data => data.json()).then(data => {\n        console.log(data);\n      }).catch(error => console.error(error));\n    };\n\n    this.inputChanged = event => {\n      const cred = this.state.credentials;\n      cred[event.target.name] = event.target.value;\n      this.setState({\n        credentials: cred\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginRight: spacing + 'px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Login User Form \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: this.state.credentials.username,\n          onChange: this.inputChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: this.state.credentials.password,\n          onChange: this.inputChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.login,\n        style: {\n          marginRight: 20 + 'px'\n        },\n        children: \"Login \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.register,\n        children: \"Register \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/KIIT/Django/DjRe/frontend/frontendapp/src/components/login.js"],"names":["render","React","Component","Login","state","credentials","username","password","login","event","console","log","fetch","method","headers","body","JSON","stringify","then","data","json","token","catch","error","register","inputChanged","cred","target","name","value","setState","marginRight","spacing"],"mappings":"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","sourcesContent":["import { render } from '@testing-library/react';\r\nimport React, { Component } from 'react'\r\n\r\nclass Login extends Component\r\n{\r\n    state = {\r\n        credentials: {username:'',password: ''}\r\n    }\r\n    \r\n    login = event => {\r\n        console.log(this.state.credentials);\r\n        fetch('http://127.0.0.1:8000/auth/', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(this.state.credentials),\r\n        })\r\n        .then( data => data.json())\r\n        .then(\r\n            data => {\r\n                console.log(data.token);\r\n            }\r\n        ).catch( error => console.error(error) )\r\n    }\r\n\r\n    register = event => {\r\n\r\n        fetch('http://127.0.0.1:8000/api/users/', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(this.state.credentials),\r\n        })\r\n        .then( data => data.json())\r\n        .then(\r\n            data => {\r\n                console.log(data);\r\n            }\r\n        ).catch( error => console.error(error) )\r\n    }\r\n\r\n    inputChanged = event => {\r\n        const cred = this.state.credentials;\r\n        cred[event.target.name] = event.target.value;\r\n        this.setState({credentials: cred});\r\n\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div style={{marginRight: spacing + 'px'}}>\r\n            <h1> Login User Form </h1>\r\n\r\n            <label>\r\n                Username: <input type=\"text\" name=\"username\" value={ this.state.credentials.username } onChange={ this.inputChanged }/>\r\n            </label>\r\n            <br/>\r\n            <label>\r\n                Password: <input type=\"password\" name=\"password\" value={ this.state.credentials.password } onChange={ this.inputChanged }/>\r\n            </label>\r\n            <br/>\r\n            <button onClick={ this.login } style={{ marginRight: 20 + 'px' }}>Login </button>\r\n            <button onClick={ this.register}>Register </button>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}